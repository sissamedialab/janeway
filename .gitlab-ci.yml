# TODO: drop `pip install wjs...` (done elsewhere)
# TODO: use deploy.sh script (ssh ForcedCommand anyway...)

# Authenticate with the Container Registry
# https://docs.gitlab.com/ee/user/packages/container_registry/authenticate_with_container_registry.html

deploy_to_test:
  stage: deploy
  tags:
    - inasset
  image: python:3.9

  variables:
    PIP: "/home/wjs/.virtualenvs/j1-venv/bin/pip"
    UWSGI_VASSAL: "/home/wjs/uwsgi/janeway.ini"

  script:
    - echo "Deploy to test instance"
    - chmod og= $ID_RSA
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "( cd janeway && git checkout jcom && git pull --ff-only https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.sissamedialab.it/wjs/janeway jcom && $PIP install --index-url=$PIP_INDEX_URL -U wjs.jcom_profile && touch --no-dereference $UWSGI_VASSAL )"
  environment:
    name: jcom-test
    url: https://janeway-test.sissamedialab.it/
  rules:
    - if: $CI_COMMIT_BRANCH == "jcom"

# build_janeway_image:
#   stage: build
#   tags:
#     - dind
#   variables:
#     TAG: "registry.gitlab.sissamedialab.it/wjs/wjs-profile-project/debian-python-git-janeway"
#   script:
#     - docker login -u $CI_REGISTRY_USER -p $CI_GROUP_REGISTRY_PUSH_TOKEN_VARIABLE registry.gitlab.sissamedialab.it
#     - docker pull $TAG || true
#     - DOCKER_BUILDKIT=1 docker build --tag $TAG --cache-from $TAG --build-arg $CI_JOB_TOKEN --file ./dockerfiles/Dockerfile.wjs ./dockerfiles
#     - docker push $TAG


build_janeway_image:
  stage: build

  # Important: runners that should support dind must have
  # volumes = ["/certs/client",...
  # privileged = true
  tags:
    - dind
    - inasset

  # We get
  # *** WARNING: Service ... probably didn't start properly.
  # Ignore for now; see:
  # https://gitlab.com/gitlab-org/gitlab-runner/-/issues/4550
  services:
    - docker:dind

  # I wasn't able to find a way to use the group-level container registry from CI/CD
  # See https://gitlab.com/gitlab-org/gitlab/-/issues/218285
  # So here I just use the project's registry.
  # TODO: verify that other wjs-profile-project can pull from this registry
  # (the image is used in it's test stage)
  variables:
    TAG: "$CI_REGISTRY_IMAGE/debian-python-git-janeway"

  # To cache from the previous image, see
  # https://docs.docker.com/engine/reference/commandline/build/#cache-from
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $TAG || true
    - docker build --tag $TAG --cache-from $TAG --build-arg BUILDKIT_INLINE_CACHE=1 --build-arg $CI_JOB_TOKEN --file ./dockerfiles/Dockerfile.wjs ./dockerfiles
    - docker push $TAG
