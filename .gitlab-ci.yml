stages:
  - build
  - deploy

include:
  - project: 'wjs/wjs-profile-project'
    ref: master
    file: '.gitlab-ci-pkg-deploy.yml'


deploy_to_test:
  extends:
    - .deploy
  tags:
    - inasset
  variables:
    SERVER_IP: "$TEST_SERVER_IP"
    SERVER_USER: "$TEST_SERVER_USER"
    DEPLOY_CMD: "deploy-janeway"
  environment:
    name: jcom-test
    url: https://janeway-test.sissamedialab.it/
  rules:
    - if: $CI_COMMIT_BRANCH == "jcom"


deploy_to_production:
  extends:
    - .deploy
  tags:
    - inasset
  variables:
    SERVER_IP: "$PROD_SERVER_IP"
    SERVER_USER: "$PROD_SERVER_USER"
    DEPLOY_CMD: "deploy-janeway"
  environment:
    name: production
    url: https://journals.sissamedialab.it/
  when: manual


.build_janeway_image:
  stage: build

  # Important: runners that should support dind must have
  # volumes = ["/certs/client",...
  # privileged = true
  tags:
    - dind
    - inasset

  # We get
  # *** WARNING: Service ... probably didn't start properly.
  # Ignore for now; see:
  # https://gitlab.com/gitlab-org/gitlab-runner/-/issues/4550
  services:
    - docker:dind

  # I wasn't able to find a way to use the group-level container registry from CI/CD
  # See https://gitlab.com/gitlab-org/gitlab/-/issues/218285
  # So here I just use the project's registry.
  # TODO: verify that other wjs-profile-project can pull from this registry
  # (the image is used in it's test stage)
  variables:
    TAG: "$CI_REGISTRY_IMAGE/debian-python-git-janeway"

  # To cache from the previous image (--cache-from), see
  # https://docs.docker.com/engine/reference/commandline/build/#cache-from
  #
  # To authenticate with the Container Registry, see
  # https://docs.gitlab.com/ee/user/packages/container_registry/authenticate_with_container_registry.html
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $TAG || true
    - docker build --tag $TAG --cache-from $TAG --build-arg BUILDKIT_INLINE_CACHE=1 --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN --build-arg BRANCH=$CI_COMMIT_BRANCH --file ./dockerfiles/Dockerfile.wjs ./dockerfiles
    - docker push $TAG

build_janeway_image_jcom:
  extends:
    - .build_janeway_image
  variables:
    TAG: "$CI_REGISTRY_IMAGE/debian-python-git-janeway:production"
  rules:
    - if: $CI_COMMIT_BRANCH == "wjs-production"

build_janeway_image_jcom15:
  extends:
    - .build_janeway_image
  variables:
    TAG: "$CI_REGISTRY_IMAGE/debian-python-git-janeway:develop"
  rules:
    - if: $CI_COMMIT_BRANCH == "wjs-develop" || $CI_COMMIT_BRANCH == "jcom-1.5"
